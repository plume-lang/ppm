pub require "../library/color"

type Level {
  DebugLevel,
  InfoLevel,
  WarningLevel,
  ErrorLevel,
  SuccessLevel
}

extend show<Level> {
  fn show_prec(c, _): str => switch c {
    case DebugLevel   => "debug"
    case InfoLevel    => "info"
    case WarningLevel => "warn"
    case ErrorLevel   => "error"
    case SuccessLevel => "success"
  }
}

fn pretty<A extends show>(level: Level, msg: A, style: (Attribute, Color)): unit =>
  switch style {
    case (attr, col) => println("[$level]".colorize(col).attribute(attr) + ": $msg")
  }

fn warn(msg: str): unit => pretty(WarningLevel, msg, (Bold, Yellow))
fn error(msg: str): unit => pretty(ErrorLevel, msg, (Bold, Red))
fn success(msg: str): unit => pretty(SuccessLevel, msg, (Bold, Green))
fn info(msg: str): unit => pretty(InfoLevel, msg, (Bold, Cyan))
fn debug(msg: str): unit => pretty(DebugLevel, msg, (Bold, Magenta))
