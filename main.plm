require "library/parser"
require "library/file"
require "library/color"
require "src/config"
require "src/cli"

require "src/commands/run"
require "src/commands/build"
require "src/commands/init"
require "src/commands/install"

fn pretty_version(version: Option<Value>): str => switch version {
  case Some(vs) => " - " + ("v" + vs.show()).attribute(Bold)
  case ? => ""
}

cmds = [
  ("run", "compile and run a Plume program"),
  ("build", "compile a Plume program"),
  ("init", "create a new Plume project"),
  ("install", "install a Plume package"),
  ("help", "show this help message")
]

parse_command_line([
  ("run", run_cmd),
  ("build", build_cmd),
  ("init", init_cmd),
  ("install", install_cmd),
  ("help", fn(_, _) {
    version = ppm_config.bind(fn(rs) => rs.get_rule("version"))

    println("Plume Project Manager".colorize(Cyan) + version.pretty_version())
    println("Usage:".colorize(Black) + " ppm <command> [args]")
    println("Commands:".colorize(Black))

    cmds.map(fn case (cmd, desc) => {
      println("  " + cmd.attribute(Bold) + ": " + desc.colorize(Black))
    })

    return unit.async()
  })
])
